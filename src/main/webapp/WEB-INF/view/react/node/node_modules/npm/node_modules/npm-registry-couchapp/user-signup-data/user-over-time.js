var request = require('request')
var qs = require('querystring')
var couch = 'http://localhost:15986/_users'
var alldocs = couch + '/_all_docs'
var n = 10
var total
var rows
var fields = ['name', 'rev', 'date', 'email', 'src']

var results = []

var raw = process.argv[2] === '-r'

// request({ uri: alldocs, json: true }, then)
then(null, null, require('./all-docs.json'))

function then (er, res, ad) {
  if (er)
    throw er
  total = ad.total_rows
  rows = ad.rows
  for (var i = 0; i < n; i++)
    collect()
}

var did = 0
function collect () {
  if (!rows.length) // || did >= 10)
    return analyze()

  did++

  var row = rows.pop()

  var id = row.id
  var uri = couch + '/' + id + '?revs_info=true'
  request({ uri: uri, json: true }, function (er, res, data) {
    if (er || !data._revs_info) {
      return collect()
    }

    var revs = data._revs_info.filter(function (rev) {
      return rev.status === 'available'
    })
    var earliest = revs.pop()
    var latest = revs.shift() || earliest

    var rev = earliest.rev
    uri = couch + '/' + id + '?rev=' + rev
    request({ uri: uri, json: true }, function (er, _, data) {
      // If it's rev 1, then there's no chance that anyting
      // is earlier, so skip the pkg lookup.
      if (data.date) {
        print(data)
        collect()
      } else {
        pkglookup(data, function () {
          print(data)
          collect()
        })
      }
    })
  })
}

function pkglookup (user, cb) {
  var byu = 'http://registry.npmjs.org/-/_view/byUser'
  var name = user.name
  var q = qs.encode({
    start_key: JSON.stringify(name),
    end_key: JSON.stringify(name)
  })
  var uri = byu + '?' + q
  request({ uri: uri, json: true }, function (er, _, data) {
    if (er)
      console.error(er, uri)

    if (!data)
      return cb()

    if (!data.rows)
      return cb()

    var pkgs = data.rows.map(function (row) {
      return row.value
    })

    var len = pkgs.length
    if (!len)
      return cb()

    var earliest = user.date;
    pkgs.forEach(function (pkg) {
      var url = 'http://registry.npmjs.org/' + pkg
      request({ url: url, json: true }, function (er, _, data) {
        if (er)
          console.log(er, url)
        if (!data)
          return then()

        var time = data.time
        var ctime = data.ctime
        if (time && time.created)
          ctime = time.created
        if (!ctime)
          then()
        if (ctime < earliest)
          earliest = ctime
        then()
      })
    })

    function then() {
      user.date = earliest
      return cb()
    }
  })
}

var analyzing = false
function analyze () {
  if (analyzing)
    return
  analyzing = true

  if (raw)
    return

  results = results.filter(function (res) {
    return res.date && res.date > '2009-09-16'
  }).sort(function (a, b) {
    return a.date > b.date ? 1 : -1
  })

  var count = 0
  var cliCount = 0
  var wwwCount = 0
  var day = results[0].date.substr(0, 10)
  results.forEach(function (data) {
    if (!data.date)
      return

    if (!data.date)
      return

    var d = data.date.substr(0, 10)
    if (d !== day)
      console.log('%j,%j,%j,%j', day, count, cliCount, wwwCount)
    day = d
    count ++
    if (data.src === 'cli')
      cliCount++
    else
      wwwCount++
  })

  console.log('%j,%j,%j,%j', day, count, cliCount, wwwCount)
}

function print (data) {
  data.rev = data._rev.split('-')[0]
  data.src = data.fields ? 'www' : 'cli'

  data = fields.map(function (f) {
    return [f, data[f]]
  }).reduce(function (set, kv) {
    set[kv[0]] = kv[1]
    return set
  }, {})

  if (raw)
    console.log(fields.map(function (f) {
      return JSON.stringify(data[f])
    }).join(','))
  else
    results.push(data)
}
