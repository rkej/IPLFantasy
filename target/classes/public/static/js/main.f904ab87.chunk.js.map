{"version":3,"sources":["NavBar.js","App.js","SignIn.js","Register.js","serviceWorker.js","index.js"],"names":["NavBar","BootstrapButton","withStyles","root","boxShadow","textTransform","fontSize","lineHeight","fontFamily","join","&:active","Button","theme","createMuiTheme","palette","primary","main","contrastText","secondary","light","dark","background","default","classes","this","props","react_default","a","createElement","ThemeProvider","className","AppBar","position","Toolbar","IconButton","edge","menuButton","color","aria-label","Menu_default","Typography","variant","title","href","Input_default","PersonAdd_default","Component","flexGrow","marginRight","spacing","App","MuiThemeProvider","src_NavBar","CssBaseline","SignIn","fetch","src_App","Card","card","style","width","verticalAlign","margin","padding","display","backgroundColor","horizontalAlign","component","paddingLeft","container","TextField","required","id","label","textField","type","name","autoComplete","fullWidth","size","minWidth","marginLeft","flexWrap","Register","Boolean","window","location","hostname","match","routing","react_router_dom","react_router","path","exact","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f904ab87.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport { createMuiTheme } from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport { ThemeProvider } from '@material-ui/styles';\r\nimport PersonAddIcon from '@material-ui/icons/PersonAdd';\r\nimport Input from '@material-ui/icons/Input';\r\nimport { Link } from '@material-ui/core';\r\n\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n});\r\n\r\nclass NavBar extends Component {\r\n\r\n    render() {\r\n        const BootstrapButton = withStyles({\r\n            root: {\r\n                boxShadow: 'none',\r\n                textTransform: 'none',\r\n                fontSize: 16,\r\n                lineHeight: 1.5,\r\n                fontFamily: [\r\n                    '-apple-system',\r\n                    'BlinkMacSystemFont',\r\n                    '\"Segoe UI\"',\r\n                    'Roboto',\r\n                    '\"Helvetica Neue\"',\r\n                    'Arial',\r\n                    'sans-serif',\r\n                    '\"Apple Color Emoji\"',\r\n                    '\"Segoe UI Emoji\"',\r\n                    '\"Segoe UI Symbol\"',\r\n                ].join(','),\r\n                '&:active': {\r\n                    boxShadow: 'none',\r\n                },\r\n\r\n            },\r\n        })(Button);\r\n        const theme = createMuiTheme({\r\n            palette: {\r\n                primary: {\r\n                    main: '#19388a',\r\n                    contrastText: '#fff',\r\n                },\r\n                secondary: {\r\n                    light: '#ffd470',\r\n                    main: '#f4a340',\r\n                    dark: '#bd7406',\r\n                    contrastText: '#000',\r\n                },\r\n                background: {\r\n                    default: \"#212121\"\r\n                }\r\n            },\r\n        })\r\n        const { classes } = this.props;\r\n        return <ThemeProvider theme={theme}> <div className={classes.root}>\r\n            <AppBar position=\"static\">\r\n                <Toolbar>\r\n                    <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"Menu\">\r\n                        <MenuIcon />\r\n                    </IconButton>\r\n                    <Typography variant=\"h6\" className={classes.title}>\r\n                        IPL Fantasy Web-App\r\n          </Typography>\r\n                    <BootstrapButton variant=\"extended\" color=\"inherit\" className={classes.menuButton} href=\"/signin\"><Input />&nbsp;&nbsp;Login</BootstrapButton>\r\n                    <BootstrapButton color=\"inherit\" className={classes.menuButton} href=\"/register\" ><PersonAddIcon />&nbsp;&nbsp;Register</BootstrapButton>\r\n                </Toolbar>\r\n            </AppBar>\r\n        </div>\r\n        </ThemeProvider>\r\n    }\r\n}\r\nNavBar.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\nexport default withStyles(styles)(NavBar);\r\n\r\n","import React, { Component } from 'react';\r\nimport { createMuiTheme, MuiThemeProvider } from '@material-ui/core/styles';\r\nimport NavBar from './NavBar';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: '#1a237e',\r\n      contrastText: '#fff',\r\n    },\r\n    secondary: {\r\n      light: '#ffd470',\r\n      main: '#f4a340',\r\n      dark: '#bd7406',\r\n      contrastText: '#000',\r\n    },\r\n    background: {\r\n      default: \"#212121\"\r\n    }\r\n  },\r\n})\r\nclass App extends Component {\r\n  render() {\r\n    return <div>\r\n      <MuiThemeProvider theme={theme}>\r\n        <NavBar />\r\n        <CssBaseline />\r\n      </MuiThemeProvider>\r\n    </div>\r\n  }\r\n}\r\nexport default App;\r\n","import React, { Component } from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { createMuiTheme } from '@material-ui/core/styles';\r\nimport { ThemeProvider, withTheme } from '@material-ui/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Card from '@material-ui/core/Card'\r\nimport Button from '@material-ui/core/Button';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport App from './App';\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    card: {\r\n        minWidth: 275,\r\n    },\r\n\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    textField: {\r\n        color: 'white',\r\n        marginLeft: theme.spacing(1),\r\n        marginRight: theme.spacing(1),\r\n    },\r\n    container: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n    },\r\n\r\n});\r\n\r\nconst theme = createMuiTheme({\r\n    palette: {\r\n        primary: {\r\n            main: '#1a237e',\r\n            contrastText: '#fff',\r\n        },\r\n        secondary: {\r\n            light: '#ffd470',\r\n            main: '#f4a340',\r\n            dark: '#bd7406',\r\n            contrastText: '#000',\r\n        },\r\n        background: {\r\n            default: \"#212121\"\r\n        }\r\n    },\r\n})\r\n\r\nclass SignIn extends Component {\r\n    async componentDidMount() {\r\n        const response = await fetch('/signin');\r\n      }\r\n    render() {\r\n        const { classes } = this.props;\r\n        return <div> <ThemeProvider theme={theme}>\r\n            <App /> <br></br><br></br> <Card className={classes.card} style={{ width: '30%', verticalAlign: 'center', margin: 'auto', padding: 10, display: 'block', backgroundColor: '#4dd0e1', horizontalAlign: 'center' }}>\r\n                <Typography variant=\"h5\" component=\"h2\" style={{ color: \"#1a237e\", paddingLeft: 10 }}>Sign In</Typography>\r\n\r\n                <form className={classes.container}>\r\n                    <TextField\r\n                        required\r\n                        style={{ backgroundColor: \"white\" }}\r\n                        id=\"outlined-email-input\"\r\n                        label=\"Email\"\r\n                        className={classes.textField}\r\n                        type=\"email\"\r\n                        name=\"email\"\r\n                        autoComplete=\"email\"\r\n                        margin=\"normal\"\r\n                        variant=\"filled\"\r\n                        fullWidth=\"true\"\r\n                    />\r\n                    <TextField\r\n                        required\r\n                        style={{ backgroundColor: \"white\" }}\r\n                        id=\"outlined-password-input\"\r\n                        label=\"Password\"\r\n                        className={classes.textField}\r\n                        type=\"password\"\r\n                        autoComplete=\"current-password\"\r\n                        margin=\"normal\"\r\n                        variant=\"filled\"\r\n                        fullWidth=\"true\"\r\n                    />\r\n                    <Button size=\"small\" color=\"primary\" style={{ paddingLeft: 10, margin: 'auto' }}>SIGN IN</Button>\r\n                </form>\r\n            </Card>\r\n        </ThemeProvider>\r\n        </div>\r\n    }\r\n}\r\nSignIn.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\nexport default withStyles(styles)(SignIn);\r\n\r\n","import React, { Component } from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { createMuiTheme } from '@material-ui/core/styles';\r\nimport { ThemeProvider, withTheme } from '@material-ui/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Card from '@material-ui/core/Card'\r\nimport Button from '@material-ui/core/Button';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport App from './App';\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    card: {\r\n        minWidth: 275,\r\n    },\r\n\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    textField: {\r\n        color: 'white',\r\n        marginLeft: theme.spacing(1),\r\n        marginRight: theme.spacing(1),\r\n    },\r\n    container: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n    },\r\n\r\n});\r\n\r\nconst theme = createMuiTheme({\r\n    palette: {\r\n        primary: {\r\n            main: '#1a237e',\r\n            contrastText: '#fff',\r\n        },\r\n        secondary: {\r\n            light: '#ffd470',\r\n            main: '#f4a340',\r\n            dark: '#bd7406',\r\n            contrastText: '#000',\r\n        },\r\n        background: {\r\n            default: \"#212121\"\r\n        }\r\n    },\r\n})\r\n\r\nclass Register extends Component {\r\n    render() {\r\n        const { classes } = this.props;\r\n        return <div> <ThemeProvider theme={theme}>\r\n            <App /> <br></br><br></br> <Card className={classes.card} style={{ width: '40%', verticalAlign: 'center', margin: 'auto', padding: 10, display: 'block', backgroundColor: '#ff6e40', horizontalAlign: 'center' }}>\r\n                <Typography variant=\"h5\" component=\"h2\" style={{ color: \"#1a237e\", paddingLeft: 10 }}>Register</Typography>\r\n\r\n                <form className={classes.container}>\r\n                    <TextField\r\n                        required\r\n                        style={{ backgroundColor: \"white\" }}\r\n                        id=\"outlined-firstName-input\"\r\n                        label=\"First Name\"\r\n                        className={classes.textField}\r\n                        name=\"firstName\"\r\n                        margin=\"normal\"\r\n                        variant=\"filled\"\r\n                    />\r\n                    <TextField\r\n                        required\r\n                        style={{ backgroundColor: \"white\" }}\r\n                        id=\"outlined-lastName-input\"\r\n                        label=\"Last Name\"\r\n                        className={classes.textField}\r\n                        name=\"lastName\"\r\n                        margin=\"normal\"\r\n                        variant=\"filled\"\r\n                    />\r\n                    <TextField\r\n                        required\r\n                        style={{ backgroundColor: \"white\" }}\r\n                        id=\"outlined-teamName-input\"\r\n                        label=\"Enter your Team Name\"\r\n                        className={classes.textField}\r\n                        name=\"teamName\"\r\n                        margin=\"normal\"\r\n                        variant=\"filled\"\r\n                        fullWidth=\"true\"\r\n                    />\r\n                    <TextField\r\n                        required\r\n                        style={{ backgroundColor: \"white\" }}\r\n                        id=\"outlined-email-input\"\r\n                        label=\"Email\"\r\n                        className={classes.textField}\r\n                        type=\"email\"\r\n                        name=\"email\"\r\n                        autoComplete=\"email\"\r\n                        margin=\"normal\"\r\n                        variant=\"filled\"\r\n                        fullWidth=\"true\"\r\n                    />\r\n                    <TextField\r\n                        required\r\n                        style={{ backgroundColor: \"white\" }}\r\n                        id=\"outlined-password-input\"\r\n                        label=\"Password\"\r\n                        className={classes.textField}\r\n                        type=\"password\"\r\n                        autoComplete=\"current-password\"\r\n                        margin=\"normal\"\r\n                        variant=\"filled\"\r\n                        fullWidth=\"true\"\r\n                    />\r\n                    <Button style={{ paddingLeft: 10, margin: 'auto', color: '#1a237e' }}>Register</Button>\r\n                </form>\r\n            </Card>\r\n        </ThemeProvider>\r\n        </div>\r\n    }\r\n}\r\nRegister.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\nexport default withStyles(styles)(Register);\r\n\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { Route, Link, BrowserRouter as Router } from 'react-router-dom';\r\nimport SignIn from './SignIn';\r\nimport Register from './Register'\r\nimport * as serviceWorker from './serviceWorker';\r\nconst routing = (\r\n  <Router>\r\n    <div>\r\n      <Route  path=\"/\" exact = {true} component={App} />\r\n      <Route path='/signin' exact ={true} component={SignIn} />\r\n      <Route path='/register' exact ={true} component={Register} />\r\n    </div>\r\n  </Router>);\r\n\r\nReactDOM.render(routing, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister(); "],"sourceRoot":""}