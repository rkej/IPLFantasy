{"version":3,"sources":["NavBar.js","App.js","SignIn.js","Register.js","serviceWorker.js","index.js"],"names":["NavBar","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","toggle","bind","assertThisInitialized","state","isOpen","setState","classes","react_default","a","createElement","Navbar","color","dark","expand","NavbarBrand","href","NavbarToggler","onClick","Collapse","navbar","Nav","className","NavItem","NavLink","React","Component","App","NavBar_NavBar","theme","createMuiTheme","palette","primary","main","contrastText","secondary","light","background","default","SignIn","ThemeProvider","src_App","Card","card","style","width","verticalAlign","margin","padding","display","backgroundColor","horizontalAlign","Typography","variant","component","paddingLeft","container","TextField","required","id","label","textField","type","name","autoComplete","fullWidth","Button","size","withStyles","root","flexGrow","minWidth","title","marginLeft","spacing","marginRight","flexWrap","Register","Boolean","window","location","hostname","match","routing","react_router_dom","react_router","path","exact","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7f1cc234.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport {\n    Collapse,\n    Navbar,\n    NavbarToggler,\n    NavbarBrand,\n    Nav,\n    NavItem,\n    NavLink,\n    UncontrolledDropdown,\n    DropdownToggle,\n    DropdownMenu,\n    DropdownItem } from 'reactstrap';\nimport MaterialIcon, {colorPalette} from 'material-icons-react';\n\nexport default class NavBar extends React.Component {\n    constructor(props) {\n        super(props);\n    \n        this.toggle = this.toggle.bind(this);\n        this.state = {\n          isOpen: false\n        };\n      }\n      toggle() {\n        this.setState({\n          isOpen: !this.state.isOpen\n        });\n      }\n\n    render() {\n        const { classes } = this.props;\n        return <div> <Navbar color=\"primary\" dark expand =\"md\">\n            <NavbarBrand href = \"/\">CricFantasy</NavbarBrand>\n            <NavbarToggler onClick={this.toggle}/>\n            <Collapse isOpen={this.state.isOpen} navbar>\n                <Nav className = \"ml-auto\" navbar>\n                    <NavItem>\n                        <NavLink href = \"/signin\">Login</NavLink>\n                    </NavItem>\n                    <NavItem>\n                        <NavLink href = \"/register\">Register</NavLink>\n                    </NavItem>\n                </Nav>\n            </Collapse>\n                 </Navbar>   \n            </div>\n    }\n}\n\n ","import React, { Component } from 'react';\nimport NavBar from './NavBar';\n\nconst bg ={backgroundColor: 'black'};\n\nclass App extends Component {\n  render() {\n    return  <div className=\"bg\">\n        <NavBar />\n\n    </div>\n  }\n}\nexport default App;\n","import React, { Component } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport { ThemeProvider, withTheme } from '@material-ui/styles';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport Card from '@material-ui/core/Card'\nimport Button from '@material-ui/core/Button';\nimport PropTypes from 'prop-types';\n\nimport App from './App';\n\nconst styles = theme => ({\n    root: {\n        flexGrow: 1,\n    },\n    card: {\n        minWidth: 275,\n    },\n\n    title: {\n        flexGrow: 1,\n    },\n    textField: {\n        color: 'white',\n        marginLeft: theme.spacing(1),\n        marginRight: theme.spacing(1),\n    },\n    container: {\n        display: 'flex',\n        flexWrap: 'wrap',\n    },\n\n});\n\nconst theme = createMuiTheme({\n    palette: {\n        primary: {\n            main: '#1a237e',\n            contrastText: '#fff',\n        },\n        secondary: {\n            light: '#ffd470',\n            main: '#f4a340',\n            dark: '#bd7406',\n            contrastText: '#000',\n        },\n        background: {\n            default: \"#212121\"\n        }\n    },\n})\n\nclass SignIn extends Component {\n\n    render() {\n        const { classes } = this.props;\n        return <div> <ThemeProvider theme={theme}>\n            <App /> <br></br><br></br> <Card className={classes.card} style={{ width: '30%', verticalAlign: 'center', margin: 'auto', padding: 10, display: 'block', backgroundColor: '#ff6e40', horizontalAlign: 'center' }}>\n                <Typography variant=\"h5\" component=\"h2\" style={{ color: \"#1a237e\", paddingLeft: 10 }}>Sign In</Typography>\n\n                <form className={classes.container}>\n                    <TextField\n                        required\n                        style={{ backgroundColor: \"white\" }}\n                        id=\"outlined-email-input\"\n                        label=\"Email\"\n                        className={classes.textField}\n                        type=\"email\"\n                        name=\"email\"\n                        autoComplete=\"email\"\n                        margin=\"normal\"\n                        variant=\"filled\"\n                        fullWidth=\"true\"\n                    />\n                    <TextField\n                        required\n                        style={{ backgroundColor: \"white\" }}\n                        id=\"outlined-password-input\"\n                        label=\"Password\"\n                        className={classes.textField}\n                        type=\"password\"\n                        autoComplete=\"current-password\"\n                        margin=\"normal\"\n                        variant=\"filled\"\n                        fullWidth=\"true\"\n                    />\n                    <Button size=\"small\" color=\"primary\" style={{ paddingLeft: 10, margin: 'auto' }}>SIGN IN</Button>\n                </form>\n            </Card>\n        </ThemeProvider>\n        </div>\n    }\n}\nSignIn.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\nexport default withStyles(styles)(SignIn);\n\n","import React, { Component } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport { ThemeProvider, withTheme } from '@material-ui/styles';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport Card from '@material-ui/core/Card'\nimport Button from '@material-ui/core/Button';\nimport PropTypes from 'prop-types';\n\nimport App from './App';\n\nconst styles = theme => ({\n    root: {\n        flexGrow: 1,\n    },\n    card: {\n        minWidth: 275,\n    },\n\n    title: {\n        flexGrow: 1,\n    },\n    textField: {\n        color: 'white',\n        marginLeft: theme.spacing(1),\n        marginRight: theme.spacing(1),\n    },\n    container: {\n        display: 'flex',\n        flexWrap: 'wrap',\n    },\n\n});\n\nconst theme = createMuiTheme({\n    palette: {\n        primary: {\n            main: '#1a237e',\n            contrastText: '#fff',\n        },\n        secondary: {\n            light: '#ffd470',\n            main: '#f4a340',\n            dark: '#bd7406',\n            contrastText: '#000',\n        },\n        background: {\n            default: \"#212121\"\n        }\n    },\n})\n\nclass Register extends Component {\n    render() {\n        const { classes } = this.props;\n        return <div> <ThemeProvider theme={theme}>\n            <App /> <br></br><br></br> <Card className={classes.card} style={{ width: '40%', verticalAlign: 'center', margin: 'auto', padding: 10, display: 'block', backgroundColor: '#D79922', horizontalAlign: 'center' }}>\n                <Typography variant=\"h5\" component=\"h2\" style={{  paddingLeft: 10 }}>Register</Typography>\n\n                <form className={classes.container}>\n                    <TextField\n                        required\n                        style={{ backgroundColor: \"white\" }}\n                        id=\"outlined-firstName-input\"\n                        label=\"First Name\"\n                        className={classes.textField}\n                        name=\"firstName\"\n                        margin=\"normal\"\n                        variant=\"filled\"\n                        fullWidth=\"true\"\n                    />\n                    <TextField\n                        required\n                        style={{ backgroundColor: \"white\" }}\n                        id=\"outlined-lastName-input\"\n                        label=\"Last Name\"\n                        className={classes.textField}\n                        name=\"lastName\"\n                        margin=\"normal\"\n                        variant=\"filled\"\n                        fullWidth=\"true\"\n                    />\n                    <TextField\n                        required\n                        style={{ backgroundColor: \"white\" }}\n                        id=\"outlined-teamName-input\"\n                        label=\"Enter your Team Name\"\n                        className={classes.textField}\n                        name=\"teamName\"\n                        margin=\"normal\"\n                        variant=\"filled\"\n                        fullWidth=\"true\"\n                    />\n                    <TextField\n                        required\n                        style={{ backgroundColor: \"white\" }}\n                        id=\"outlined-email-input\"\n                        label=\"Email\"\n                        className={classes.textField}\n                        type=\"email\"\n                        name=\"email\"\n                        autoComplete=\"email\"\n                        margin=\"normal\"\n                        variant=\"filled\"\n                        fullWidth=\"true\"\n                    />\n                    <TextField\n                        required\n                        style={{ backgroundColor: \"white\" }}\n                        id=\"outlined-password-input\"\n                        label=\"Password\"\n                        className={classes.textField}\n                        type=\"password\"\n                        autoComplete=\"current-password\"\n                        margin=\"normal\"\n                        variant=\"filled\"\n                        fullWidth=\"true\"\n                    />\n                    <Button style={{ paddingLeft: 10, margin: 'auto' }}>Register</Button>\n                </form>\n            </Card>\n        </ThemeProvider>\n        </div>\n    }\n}\nRegister.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\nexport default withStyles(styles)(Register);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Route, Link, BrowserRouter as Router } from 'react-router-dom';\nimport SignIn from './SignIn';\nimport Register from './Register'\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nconst routing = (\n  <Router>\n    <div>\n      <Route  path=\"/\" exact = {true} component={App} />\n      <Route path='/signin' exact ={true} component={SignIn} />\n      <Route path='/register' exact ={true} component={Register} />\n    </div>\n  </Router>);\n\nReactDOM.render(routing, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister(); "],"sourceRoot":""}