{"version":3,"sources":["NavBar.js","App.js","SignIn.js","Register.js","serviceWorker.js","index.js"],"names":["NavBar","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","toggle","bind","assertThisInitialized","state","isOpen","setState","classes","react_default","a","createElement","Navbar","color","dark","expand","NavbarBrand","href","NavbarToggler","onClick","Collapse","navbar","Nav","className","NavItem","NavLink","React","Component","App","NavBar_NavBar","SignIn","onFormSubmit","event","preventDefault","axios","post","params","email","password","handleInputChange","target","name","value","defineProperty","src_App","Card","style","width","verticalAlign","margin","padding","display","backgroundColor","horizontalAlign","CardHeader","CardBody","Form","FormGroup","Label","for","Input","onChange","type","id","required","Button","firstName","lastName","teamName","onSubmit","Boolean","window","location","hostname","match","routing","react_router_dom","react_router","path","exact","component","Register","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a0acfd12.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport {\r\n    Collapse,\r\n    Navbar,\r\n    NavbarToggler,\r\n    NavbarBrand,\r\n    Nav,\r\n    NavItem,\r\n    NavLink,\r\n    UncontrolledDropdown,\r\n    DropdownToggle,\r\n    DropdownMenu,\r\n    DropdownItem } from 'reactstrap';\r\nimport MaterialIcon, {colorPalette} from 'material-icons-react';\r\n\r\nexport default class NavBar extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    \r\n        this.toggle = this.toggle.bind(this);\r\n        this.state = {\r\n          isOpen: false\r\n        };\r\n      }\r\n      toggle() {\r\n        this.setState({\r\n          isOpen: !this.state.isOpen\r\n        });\r\n      }\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        return <div> <Navbar color=\"primary\" dark expand =\"md\">\r\n            <NavbarBrand href = \"/\">CricFantasy</NavbarBrand>\r\n            <NavbarToggler onClick={this.toggle}/>\r\n            <Collapse isOpen={this.state.isOpen} navbar>\r\n                <Nav className = \"ml-auto\" navbar>\r\n                    <NavItem>\r\n                        <NavLink href = \"/signin\">Login</NavLink>\r\n                    </NavItem>\r\n                    <NavItem>\r\n                        <NavLink href = \"/register\">Register</NavLink>\r\n                    </NavItem>\r\n                </Nav>\r\n            </Collapse>\r\n                 </Navbar>   \r\n            </div>\r\n    }\r\n}\r\n\r\n ","import React, { Component } from 'react';\r\nimport NavBar from './NavBar';\r\n\r\nconst bg ={backgroundColor: 'black'};\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return  <div className=\"bg\">\r\n        <NavBar />\r\n\r\n    </div>\r\n  }\r\n}\r\nexport default App;\r\n","import React, { Component } from 'react';\r\nimport {\r\n    Card, Button, CardHeader, CardFooter, CardBody,\r\n    CardTitle, CardText, Col, Row, Form, FormGroup, Label, Input, FormText, FormFeedback\r\n} from 'reactstrap';\r\nimport App from './App';\r\nimport axios from 'axios';\r\n\r\nexport default class SignIn extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            email: '',\r\n            password: '',\r\n        };\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n    }\r\n\r\n    handleInputChange(event) {\r\n        const target = event.target;\r\n        const name = target.name;\r\n        const value = target.value;\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    }\r\n\r\n    onFormSubmit = event => {\r\n        event.preventDefault();\r\n        axios.post('/api/signin', null, {\r\n            params: {\r\n                email: this.state.email,\r\n                password: this.state.password,\r\n            }\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return <div><App />\r\n            <br /><br />\r\n            <Card style={{\r\n                width: \"40%\",\r\n                verticalAlign: 'center',\r\n                margin: 'auto',\r\n                padding: 5,\r\n                display: 'block',\r\n                backgroundColor: '#FFAB91',\r\n                horizontalAlign: 'center'\r\n            }}>\r\n                <CardHeader style={{ backgroundColor: '#FF1744', color: 'white' }}><strong>Sign in</strong></CardHeader>\r\n\r\n                <CardBody>\r\n                    <Form>\r\n                        <FormGroup>\r\n                            <Label for=\"email\" >Email</Label>\r\n                            <Input onChange={this.handleInputChange} style={{ width: \"100%\" }} type=\"email\" name=\"email\" id=\"email\" value={this.state.email} required />\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Label for=\"password\" >Password</Label>\r\n                            <Input onChange={this.handleInputChange} style={{ width: \"100%\" }} type=\"password\" name=\"password\" id=\"password\" value={this.state.password} required />\r\n                        </FormGroup>\r\n                        <Button color=\"primary\" style={{\r\n                            verticalAlign: 'center',\r\n                            margin: 'auto',\r\n                            padding: 10,\r\n                            display: 'block',\r\n                            horizontalAlign: 'center'\r\n                        }} onClick={this.onFormSubmit}>Sign in</Button>\r\n                    </Form>\r\n                </CardBody>\r\n            </Card>\r\n        </div >\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport {\r\n    Card, Button, CardHeader, CardFooter, CardBody,\r\n    CardTitle, CardText, Col, Row, Form, FormGroup, Label, Input, FormText\r\n} from 'reactstrap';\r\nimport axios from 'axios';\r\nimport App from './App';\r\n\r\nexport default class SignIn extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            email: '',\r\n            password: '',\r\n            firstName: '',\r\n            lastName: '',\r\n            teamName: ''\r\n        };\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n    }\r\n\r\n    handleInputChange(event) {\r\n        const target = event.target;\r\n        const name = target.name;\r\n        const value = target.value;\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    }\r\n\r\n    onFormSubmit=event=>{\r\n        event.preventDefault();\r\n        axios.post('/api/register', null, {\r\n            params: {\r\n                email: this.state.email,\r\n                password: this.state.password,\r\n                firstName: this.state.firstName,\r\n                lastName: this.state.lastName,\r\n                teamName: this.state.teamName\r\n            }\r\n        })\r\n    }\r\n    render() {\r\n        return <div><App />\r\n            <br />\r\n            <Card style={{\r\n                width: \"40%\",\r\n                verticalAlign: 'center',\r\n                margin: 'auto',\r\n                padding: 5,\r\n                display: 'block',\r\n                backgroundColor: '#FFAB91',\r\n                horizontalAlign: 'center'\r\n            }}>\r\n\r\n                <CardHeader style={{ backgroundColor: '#FF1744', color: 'white' }}><strong>Register</strong></CardHeader>\r\n\r\n                <CardBody>\r\n                    <Form onSubmit={this.onFormSubmit}>\r\n                        <FormGroup>\r\n                            <Label for=\"firstName\">First Name</Label>\r\n                            <Input onChange={this.handleInputChange} style={{ width: \"100%\" }} type=\"text\" name=\"firstName\" id=\"firstName\" value={this.state.firstName} required/>\r\n                        </FormGroup>\r\n\r\n                        <FormGroup>\r\n                            <Label for=\"lastName\" >Last Name</Label>\r\n                            <Input onChange={this.handleInputChange} style={{ width: \"100%\" }} type=\"text\" name=\"lastName\" id=\"lastName\" value={this.state.lastName} required />\r\n                        </FormGroup>\r\n\r\n                        <FormGroup>\r\n                            <Label for=\"teamName\" >Team Name</Label>\r\n                            <Input onChange={this.handleInputChange} style={{ width: \"100%\" }} type=\"text\" name=\"teamName\" id=\"teamName\" value={this.state.teamName} required />\r\n                        </FormGroup>\r\n\r\n                        <FormGroup>\r\n                            <Label for=\"email\" >Email</Label>\r\n                            <Input onChange={this.handleInputChange} style={{ width: \"100%\" }} type=\"email\" name=\"email\" id=\"email\" value={this.state.email} required />\r\n                        </FormGroup>\r\n\r\n                        <FormGroup>\r\n                            <Label for=\"password\" >Password</Label>\r\n                            <Input onChange={this.handleInputChange} style={{ width: \"100%\" }} type=\"password\" name=\"password\" id=\"password\" value={this.state.password} required />\r\n                        </FormGroup>\r\n                    </Form>\r\n                    <Button color=\"primary\" style={{\r\n                        verticalAlign: 'center',\r\n                        margin: 'auto',\r\n                        padding: 10,\r\n                        display: 'block',\r\n                        horizontalAlign: 'center'\r\n                    }} type=\"submit\" onClick={this.onFormSubmit}>Register</Button>\r\n\r\n                </CardBody>\r\n            </Card>\r\n        </div>\r\n    }\r\n}\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { Route, Link, BrowserRouter as Router } from 'react-router-dom';\r\nimport SignIn from './SignIn';\r\nimport Register from './Register'\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nconst routing = (\r\n  <Router>\r\n    <div>\r\n      <Route  path=\"/\" exact = {true} component={App} />\r\n      <Route path='/signin' exact ={true} component={SignIn} />\r\n      <Route path='/register' exact ={true} component={Register} />\r\n    </div>\r\n  </Router>);\r\n\r\nReactDOM.render(routing, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister(); "],"sourceRoot":""}