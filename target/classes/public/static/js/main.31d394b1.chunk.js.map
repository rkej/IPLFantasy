{"version":3,"sources":["NavBar.js","App.js","LoginNavBar.js","Home.js","SignIn.js","Register.js","serviceWorker.js","index.js"],"names":["NavBar","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","toggle","bind","assertThisInitialized","state","isOpen","setState","classes","react_default","a","createElement","Navbar","style","backgroundColor","dark","expand","NavbarBrand","href","NavbarToggler","onClick","Collapse","navbar","Nav","className","NavItem","NavLink","React","Component","App","NavBar_NavBar","LoginNavBar","Home","LoginNavBar_LoginNavBar","SignIn","onFormSubmit","event","preventDefault","email","password","alert","axios","post","params","catch","err","error","then","response","history","push","concat","handleInputChange","target","name","value","defineProperty","src_App","Card","width","verticalAlign","margin","padding","display","horizontalAlign","CardHeader","color","CardBody","Form","FormGroup","Label","for","Input","onChange","type","id","required","Button","firstName","lastName","teamName","data","onSubmit","Boolean","window","location","hostname","match","routing","react_router_dom","react_router","path","exact","component","Register","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.31d394b1.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport {\r\n    Collapse,\r\n    Navbar,\r\n    NavbarToggler,\r\n    NavbarBrand,\r\n    Nav,\r\n    NavItem,\r\n    NavLink } from 'reactstrap';\r\n\r\nexport default class NavBar extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    \r\n        this.toggle = this.toggle.bind(this);\r\n        this.state = {\r\n          isOpen: false\r\n        };\r\n      }\r\n      toggle() {\r\n        this.setState({\r\n          isOpen: !this.state.isOpen\r\n        });\r\n      }\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        return <div> <Navbar style = {{backgroundColor: \"#7F3F98\"}} dark expand =\"md\">\r\n            <NavbarBrand href = \"/\">CricFantasy</NavbarBrand>\r\n            <NavbarToggler onClick={this.toggle}/>\r\n            <Collapse isOpen={this.state.isOpen} navbar>\r\n                <Nav className = \"ml-auto\" navbar>\r\n                    <NavItem>\r\n                        <NavLink href = \"/signin\">Login</NavLink>\r\n                    </NavItem>\r\n                    <NavItem>\r\n                        <NavLink href = \"/register\">Register</NavLink>\r\n                    </NavItem>\r\n                </Nav>\r\n            </Collapse>\r\n                 </Navbar>\r\n            </div>\r\n    }\r\n}\r\n\r\n ","import React, { Component } from 'react';\r\nimport NavBar from './NavBar';\r\n\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return  <div>\r\n        <NavBar />\r\n        <style>{'body { background-color: black; }'}\r\n        </style>\r\n    </div>\r\n    \r\n  }\r\n}\r\nexport default App;\r\n","import React, { Component } from 'react';\r\nimport {\r\n    Collapse,\r\n    Navbar,\r\n    NavbarToggler,\r\n    NavbarBrand,\r\n    Nav,\r\n    NavItem,\r\n    NavLink } from 'reactstrap';\r\n\r\nexport default class LoginNavBar extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    \r\n        this.toggle = this.toggle.bind(this);\r\n        this.state = {\r\n          isOpen: false\r\n        };\r\n      }\r\n      toggle() {\r\n        this.setState({\r\n          isOpen: !this.state.isOpen\r\n        });\r\n      }\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        return <div> <Navbar style = {{backgroundColor: \"#7F3F98\"}} dark expand =\"md\">\r\n            <NavbarBrand>CricFantasy</NavbarBrand>\r\n            <NavbarToggler onClick={this.toggle}/>\r\n            <Collapse isOpen={this.state.isOpen} navbar>\r\n                <Nav className = \"ml-auto\" navbar>\r\n                    <NavItem>\r\n                        <NavLink href = \"/dashboard\">Dashboard</NavLink>\r\n                    </NavItem>\r\n                    <NavItem>\r\n                        <NavLink href = \"/rules\">Scoring rules</NavLink>\r\n                    </NavItem>\r\n                    <NavItem>\r\n                        <NavLink href = \"/\">Logout</NavLink>\r\n                    </NavItem>\r\n                </Nav>\r\n            </Collapse>\r\n                 </Navbar>\r\n            </div>\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport LoginNavBar from './LoginNavBar';\r\n\r\n\r\nclass Home extends Component {\r\n  render() {\r\n    return  <div>\r\n        <LoginNavBar />\r\n        <style>{'body { background-color: black; }'}\r\n        </style>\r\n    </div>\r\n    \r\n  }\r\n}\r\nexport default Home;","import React, { Component } from 'react';\r\nimport {\r\n    Card, Button, CardHeader, CardFooter, CardBody,\r\n    CardTitle, CardText, Col, Row, Form, FormGroup, Label, Input, FormText, FormFeedback\r\n} from 'reactstrap';\r\nimport App from './App';\r\nimport axios from 'axios';\r\nimport { Redirect } from 'react-router';\r\n\r\nexport default class SignIn extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            email: '',\r\n            password: '',\r\n            error: 0\r\n        };\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n    }\r\n\r\n    handleInputChange(event) {\r\n        const target = event.target;\r\n        const name = target.name;\r\n        const value = target.value;\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    }\r\n\r\n    onFormSubmit = event => {\r\n        event.preventDefault();\r\n        if((this.state.email=='')|(this.state.password=='')){\r\n            alert('Please check your input fields');\r\n        }\r\n        else{\r\n        axios.post('/api/signin', null, {\r\n            params: {\r\n                email: this.state.email,\r\n                password: this.state.password,\r\n            }\r\n        })\r\n        .catch((err)=>{\r\n            alert(err)\r\n            this.state.error = 1\r\n        })\r\n        .then(response=>{\r\n            if(this.state.error != 1){\r\n                this.props.history.push(`home?${this.state.email}`);}\r\n        }\r\n        )\r\n    }\r\n}\r\n\r\n    render() {\r\n        return <div><App />\r\n            <br /><br />\r\n            <Card style={{\r\n                width: \"40%\",\r\n                verticalAlign: 'center',\r\n                margin: 'auto',\r\n                padding: 5,\r\n                display: 'block',\r\n                backgroundColor: '#2E353B',\r\n                horizontalAlign: 'center'\r\n            }}>\r\n                <CardHeader style={{ backgroundColor: '#CD853F', color: 'white' }}><strong>Sign in</strong></CardHeader>\r\n\r\n                <CardBody>\r\n                    <Form>\r\n                        <FormGroup>\r\n                            <Label for=\"email\" style={{color: 'white'}}>Email</Label>\r\n                            <Input onChange={this.handleInputChange} style={{ width: \"100%\" }} type=\"email\" name=\"email\" id=\"email\" value={this.state.email} required />\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Label for=\"password\" style={{color: 'white'}} >Password</Label>\r\n                            <Input onChange={this.handleInputChange} style={{ width: \"100%\" }} type=\"password\" name=\"password\" id=\"password\" value={this.state.password} required />\r\n                        </FormGroup>\r\n                        <Button style={{\r\n                        verticalAlign: 'center',\r\n                        margin: 'auto',\r\n                        padding: 10,\r\n                        display: 'block',\r\n                        horizontalAlign: 'center', \r\n                        backgroundColor: \"#7F3F98\"\r\n                    }} type=\"submit\" onClick={this.onFormSubmit}>Sign in</Button>\r\n                    </Form>\r\n                </CardBody>\r\n            </Card>\r\n        </div >\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport {\r\n    Card, Button, CardHeader, CardBody,\r\n     Form, FormGroup, Label, Input\r\n} from 'reactstrap';\r\nimport axios from 'axios';\r\nimport App from './App';\r\n\r\nexport default class SignIn extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            email: '',\r\n            password: '',\r\n            firstName: '',\r\n            lastName: '',\r\n            teamName: ''\r\n        };\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n    }\r\n\r\n    handleInputChange(event) {\r\n        const target = event.target;\r\n        const name = target.name;\r\n        const value = target.value;\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    }\r\n\r\n    onFormSubmit=event=>{\r\n        event.preventDefault();\r\n        if((this.state.email=='')|(this.state.password=='')|(this.state.firstName=='')|(this.state.lastName=='')|(this.state.teamName=='')){\r\n            alert('Please check your input fields');\r\n        }\r\n        else{\r\n        axios.post('/api/register', null, {\r\n            params: {\r\n                email: this.state.email,\r\n                password: this.state.password,\r\n                firstName: this.state.firstName,\r\n                lastName: this.state.lastName,\r\n                teamName: this.state.teamName\r\n            }\r\n        })\r\n        .then(response=>{\r\n            alert(response.data);\r\n        }\r\n        )\r\n    }\r\n}\r\n    render() {\r\n        return <div><App />\r\n            <br />\r\n            <Card style={{\r\n                width: \"40%\",\r\n                verticalAlign: 'center',\r\n                margin: 'auto',\r\n                padding: 5,\r\n                display: 'block',\r\n                backgroundColor: '#2E353B',\r\n                horizontalAlign: 'center'\r\n            }}>\r\n\r\n                <CardHeader style={{ backgroundColor: '#CD853F', color: 'white' }}><strong>Register</strong></CardHeader>\r\n\r\n                <CardBody>\r\n                    <Form onSubmit={this.onFormSubmit}>\r\n                        <FormGroup>\r\n                            <Label for=\"firstName\" style={{color: 'white'}}>First Name</Label>\r\n                            <Input onChange={this.handleInputChange} style={{ width: \"100%\" }} type=\"text\" name=\"firstName\" id=\"firstName\" value={this.state.firstName} required/>\r\n                        </FormGroup>\r\n\r\n                        <FormGroup>\r\n                            <Label for=\"lastName\" style={{color: 'white'}}>Last Name</Label>\r\n                            <Input onChange={this.handleInputChange} style={{ width: \"100%\" }} type=\"text\" name=\"lastName\" id=\"lastName\" value={this.state.lastName} required />\r\n                        </FormGroup>\r\n\r\n                        <FormGroup>\r\n                            <Label for=\"teamName\" style={{color: 'white'}}>Team Name</Label>\r\n                            <Input onChange={this.handleInputChange} style={{ width: \"100%\" }} type=\"text\" name=\"teamName\" id=\"teamName\" value={this.state.teamName} required />\r\n                        </FormGroup>\r\n\r\n                        <FormGroup>\r\n                            <Label for=\"email\" style={{color: 'white'}}>Email</Label>\r\n                            <Input onChange={this.handleInputChange} style={{ width: \"100%\" }} type=\"email\" name=\"email\" id=\"email\" value={this.state.email} required />\r\n                        </FormGroup>\r\n\r\n                        <FormGroup>\r\n                            <Label for=\"password\" style={{color: 'white'}}>Password</Label>\r\n                            <Input onChange={this.handleInputChange} style={{ width: \"100%\" }} type=\"password\" name=\"password\" id=\"password\" value={this.state.password} required />\r\n                        </FormGroup>\r\n                    <Button style={{\r\n                        verticalAlign: 'center',\r\n                        margin: 'auto',\r\n                        padding: 10,\r\n                        display: 'block',\r\n                        horizontalAlign: 'center', \r\n                        backgroundColor: \"#7F3F98\"\r\n                    }} type=\"submit\" onClick={this.onFormSubmit}>Register</Button>\r\n                                        </Form>\r\n\r\n\r\n                </CardBody>\r\n            </Card>\r\n        </div>\r\n    }\r\n}\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport Home from './Home';\r\nimport { Route, Link, BrowserRouter as Router } from 'react-router-dom';\r\nimport SignIn from './SignIn';\r\nimport Register from './Register'\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nconst routing = (\r\n  <Router>\r\n    <div>\r\n      <Route  path=\"/\" exact = {true} component={App} />\r\n      <Route path='/signin' exact ={true} component={SignIn} />\r\n      <Route path='/register' exact ={true} component={Register} />\r\n      <Route path='/home' exact ={false} component={Home} />\r\n    </div>\r\n  </Router>);\r\n\r\nReactDOM.render(routing, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister(); "],"sourceRoot":""}